{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Volumes/Coding/NPM/Class Projects/C-86/screens/CreateStory.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar CreateStory = function (_Component) {\n  _inherits(CreateStory, _Component);\n\n  var _super = _createSuper(CreateStory);\n\n  function CreateStory(props) {\n    var _this;\n\n    _classCallCheck(this, CreateStory);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      previewImage: \"image_1\",\n      dropdownHeight: 40\n    };\n    return _this;\n  }\n\n  _createClass(CreateStory, [{\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 14\n          }\n        });\n      } else {\n        var preview_images = {\n          image_1: require(\"../assets/story_image_1.png\"),\n          image_2: require(\"../assets/story_image_2.png\"),\n          image_3: require(\"../assets/story_image_3.png\"),\n          image_4: require(\"../assets/story_image_4.png\"),\n          image_5: require(\"../assets/story_image_5.png\")\n        };\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 9\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: styles.appTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.appIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.iconImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: styles.appTitleTextContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.appTitleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        }, \"New Story\"))), React.createElement(View, {\n          style: styles.fieldsContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 11\n          }\n        }, React.createElement(ScrollView, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: preview_images[this.state.previewImage],\n          style: styles.previewImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }\n        }), React.createElement(View, {\n          style: {\n            height: RFValue(this.state.dropdownHeight)\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }\n        }, React.createElement(DropDownPicker, {\n          items: [{\n            label: \"Image 1\",\n            value: \"image_1\"\n          }, {\n            label: \"Image 2\",\n            value: \"image_2\"\n          }, {\n            label: \"Image 3\",\n            value: \"image_3\"\n          }, {\n            label: \"Image 4\",\n            value: \"image_4\"\n          }, {\n            label: \"Image 5\",\n            value: \"image_5\"\n          }],\n          defaultValue: this.state.previewImage,\n          containerStyle: {\n            height: 40,\n            borderRadius: 20,\n            marginBottom: 10\n          },\n          onOpen: function onOpen() {\n            _this2.setState({\n              dropdownHeight: 170\n            });\n          },\n          onClose: function onClose() {\n            _this2.setState({\n              dropdownHeight: 40\n            });\n          },\n          style: {\n            backgroundColor: \"transparent\"\n          },\n          itemStyle: {\n            justifyContent: \"flex-start\"\n          },\n          dropDownStyle: {\n            backgroundColor: \"#2f345d\"\n          },\n          labelStyle: {\n            color: \"white\",\n            fontFamily: \"Bubblegum-Sans\"\n          },\n          arrowStyle: {\n            color: \"white\",\n            fontFamily: \"Bubblegum-Sans\"\n          },\n          onChangeItem: function onChangeItem(item) {\n            return _this2.setState({\n              previewImage: item.value\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }\n        })), React.createElement(TextInput, {\n          style: styles.inputFont,\n          onChangeText: function onChangeText(title) {\n            return _this2.setState({\n              title: title\n            });\n          },\n          placeholder: \"Title\",\n          placeholderTextColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }\n        }), React.createElement(TextInput, {\n          style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(description) {\n            return _this2.setState({\n              description: description\n            });\n          },\n          placeholder: \"Description\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholderTextColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }), React.createElement(TextInput, {\n          style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(story) {\n            return _this2.setState({\n              story: story\n            });\n          },\n          placeholder: \"Story\",\n          multiline: true,\n          numberOfLines: 20,\n          placeholderTextColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }\n        }), React.createElement(TextInput, {\n          style: [styles.inputFont, styles.inputFontExtra, styles.inputTextBig],\n          onChangeText: function onChangeText(moral) {\n            return _this2.setState({\n              moral: moral\n            });\n          },\n          placeholder: \"Moral of the story\",\n          multiline: true,\n          numberOfLines: 4,\n          placeholderTextColor: \"white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }\n        }))), React.createElement(View, {\n          style: {\n            flex: 0.08\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return CreateStory;\n}(Component);\n\nexport { CreateStory as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontExtra: {\n    marginTop: RFValue(15)\n  },\n  inputTextBig: {\n    textAlignVertical: \"top\",\n    padding: RFValue(5)\n  }\n});","map":{"version":3,"sources":["/Volumes/Coding/NPM/Class Projects/C-86/screens/CreateStory.js"],"names":["React","Component","RFValue","DropDownPicker","AppLoading","Font","customFonts","require","CreateStory","props","state","fontsLoaded","previewImage","dropdownHeight","loadAsync","setState","_loadFontsAsync","preview_images","image_1","image_2","image_3","image_4","image_5","styles","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleText","fieldsContainer","height","label","value","borderRadius","marginBottom","backgroundColor","justifyContent","color","fontFamily","item","inputFont","title","inputFontExtra","inputTextBig","description","story","moral","flex","StyleSheet","create","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","alignItems","width","resizeMode","fontSize","alignSelf","marginVertical","borderColor","borderWidth","paddingLeft","textAlignVertical","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Image,\n  ScrollView,\n  TextInput,\n  Dimensions\n} from \"react-native\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport DropDownPicker from \"react-native-dropdown-picker\";\n\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\n\nlet customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nexport default class CreateStory extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontsLoaded: false,\n      previewImage: \"image_1\",\n      dropdownHeight: 40\n    };\n  }\n\n  async _loadFontsAsync() {\n    await Font.loadAsync(customFonts);\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n  }\n\n  render() {\n    if (!this.state.fontsLoaded) {\n      return <AppLoading />;\n    } else {\n      let preview_images = {\n        image_1: require(\"../assets/story_image_1.png\"),\n        image_2: require(\"../assets/story_image_2.png\"),\n        image_3: require(\"../assets/story_image_3.png\"),\n        image_4: require(\"../assets/story_image_4.png\"),\n        image_5: require(\"../assets/story_image_5.png\")\n      };\n      return (\n        <View style={styles.container}>\n          <SafeAreaView style={styles.droidSafeArea} />\n          <View style={styles.appTitle}>\n            <View style={styles.appIcon}>\n              <Image\n                source={require(\"../assets/logo.png\")}\n                style={styles.iconImage}\n              ></Image>\n            </View>\n            <View style={styles.appTitleTextContainer}>\n              <Text style={styles.appTitleText}>New Story</Text>\n            </View>\n          </View>\n          <View style={styles.fieldsContainer}>\n            <ScrollView>\n              <Image\n                source={preview_images[this.state.previewImage]}\n                style={styles.previewImage}\n              ></Image>\n              <View style={{ height: RFValue(this.state.dropdownHeight) }}>\n                <DropDownPicker\n                  items={[\n                    { label: \"Image 1\", value: \"image_1\" },\n                    { label: \"Image 2\", value: \"image_2\" },\n                    { label: \"Image 3\", value: \"image_3\" },\n                    { label: \"Image 4\", value: \"image_4\" },\n                    { label: \"Image 5\", value: \"image_5\" }\n                  ]}\n                  defaultValue={this.state.previewImage}\n                  containerStyle={{\n                    height: 40,\n                    borderRadius: 20,\n                    marginBottom: 10\n                  }}\n                  onOpen={() => {\n                    this.setState({ dropdownHeight: 170 });\n                  }}\n                  onClose={() => {\n                    this.setState({ dropdownHeight: 40 });\n                  }}\n                  style={{ backgroundColor: \"transparent\" }}\n                  itemStyle={{\n                    justifyContent: \"flex-start\"\n                  }}\n                  dropDownStyle={{ backgroundColor: \"#2f345d\" }}\n                  labelStyle={{\n                    color: \"white\",\n                    fontFamily: \"Bubblegum-Sans\"\n                  }}\n                  arrowStyle={{\n                    color: \"white\",\n                    fontFamily: \"Bubblegum-Sans\"\n                  }}\n                  onChangeItem={item =>\n                    this.setState({\n                      previewImage: item.value\n                    })\n                  }\n                />\n              </View>\n\n              <TextInput\n                style={styles.inputFont}\n                onChangeText={title => this.setState({ title })}\n                placeholder={\"Title\"}\n                placeholderTextColor=\"white\"\n              />\n\n              <TextInput\n                style={[\n                  styles.inputFont,\n                  styles.inputFontExtra,\n                  styles.inputTextBig\n                ]}\n                onChangeText={description => this.setState({ description })}\n                placeholder={\"Description\"}\n                multiline={true}\n                numberOfLines={4}\n                placeholderTextColor=\"white\"\n              />\n              <TextInput\n                style={[\n                  styles.inputFont,\n                  styles.inputFontExtra,\n                  styles.inputTextBig\n                ]}\n                onChangeText={story => this.setState({ story })}\n                placeholder={\"Story\"}\n                multiline={true}\n                numberOfLines={20}\n                placeholderTextColor=\"white\"\n              />\n\n              <TextInput\n                style={[\n                  styles.inputFont,\n                  styles.inputFontExtra,\n                  styles.inputTextBig\n                ]}\n                onChangeText={moral => this.setState({ moral })}\n                placeholder={\"Moral of the story\"}\n                multiline={true}\n                numberOfLines={4}\n                placeholderTextColor=\"white\"\n              />\n            </ScrollView>\n          </View>\n          <View style={{ flex: 0.08 }} />\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  fieldsContainer: {\n    flex: 0.85\n  },\n  previewImage: {\n    width: \"93%\",\n    height: RFValue(250),\n    alignSelf: \"center\",\n    borderRadius: RFValue(10),\n    marginVertical: RFValue(10),\n    resizeMode: \"contain\"\n  },\n  inputFont: {\n    height: RFValue(40),\n    borderColor: \"white\",\n    borderWidth: RFValue(1),\n    borderRadius: RFValue(10),\n    paddingLeft: RFValue(10),\n    color: \"white\",\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  inputFontExtra: {\n    marginTop: RFValue(15)\n  },\n  inputTextBig: {\n    textAlignVertical: \"top\",\n    padding: RFValue(5)\n  }\n});\n"]},"metadata":{},"sourceType":"module"}